{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst routes = {\n  addClassWork: 'schtrack-learning/api/v1/ClassWork/UploadFile',\n  getClassWorkByTeacher: 'schtrack-learning/api/v1/ClassWork/GetAllFileByTeacher',\n  getClassWorkDetails: 'schtrack-learning/api/v1/ClassWork/GetClassWorkDetail',\n  getClassWorFiles: 'schtrack-learning/api/v1/ClassWork/GetFileByClassSubject'\n};\nexport let ClassWorkService = /*#__PURE__*/(() => {\n  class ClassWorkService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    addClassWork(form) {\n      const tenantId = '1';\n      const body = new FormData();\n      body.append('ClassSubjectId', form.ClassSubjectId);\n      body.append('FileObj', form.FileObj);\n      body.append('Comment', form.Comment);\n      const url = `${this.baseUrl + routes.addClassWork}`;\n      return this.http.post(url, body, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          tenantId\n        }\n      });\n    }\n    getClassWorkByTeacher() {\n      const tenantId = '1';\n      const url = `${this.baseUrl + routes.getClassWorkByTeacher}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          tenantId\n        }\n      });\n    }\n    getClassWorkDetails(id) {\n      const tenantId = '1';\n      const url = `${this.baseUrl + routes.getClassWorkDetails}?id=${id}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          tenantId\n        }\n      });\n    }\n    getClassWorkFiles(id) {\n      const url = `${this.baseUrl + routes.getClassWorFiles}/?classSubjectId=${id}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function ClassWorkService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClassWorkService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClassWorkService,\n      factory: ClassWorkService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return ClassWorkService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}