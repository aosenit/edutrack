{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst routes = {\n  addsession: 'schtrack-assessment/api/v1/SessionSetup/AddSchoolSession',\n  editsession: 'schtrack-assessment/api/v1/SessionSetup/UpdateSchoolSession',\n  getschoolSessions: 'schtrack-assessment/api/v1/SessionSetup/GetSchoolSessions',\n  getcurrentsession: 'schtrack-assessment/api/v1/SessionSetup/GetCurrentSchoolSessions',\n  setupassessment: 'schtrack-assessment/api/v1/AssessmentSetup/UploadAssessmentSetups',\n  updateassessment: 'schtrack-assessment/api/v1/AssessmentSetup/UpdateAssessmentSetups',\n  getassessmentsetup: 'schtrack-assessment/api/v1/AssessmentSetup/GetAllAssessmentSetup',\n  submitStudentResult: 'schtrack-assessment/api/v1/Result/SubmitStudentResult',\n  approveStudentsResult: 'schtrack-assessment/api/v1/Result/SubmitClassResultForApproval',\n  getAllGradeSetup: 'schtrack-assessment/api/v1/GradeSetup/GetAllGradeForSchoolSetup'\n};\nexport let AssessmentService = /*#__PURE__*/(() => {\n  class AssessmentService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    addProperty(result) {\n      const url = `${this.baseUrl + routes.addsession}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    updateProperty(id, result) {\n      const url = `${this.baseUrl + routes.editsession}/${id}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getSchoolSessions() {\n      const url = `${this.baseUrl + routes.getschoolSessions}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getCurrentSession() {\n      const url = `${this.baseUrl + routes.getcurrentsession}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    setUpAssessment(result) {\n      const url = `${this.baseUrl + routes.setupassessment}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    updateAssessment(result) {\n      const url = `${this.baseUrl + routes.updateassessment}`;\n      return this.http.put(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAllAssessmentSetup() {\n      const url = `${this.baseUrl + routes.getassessmentsetup}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    submitStudentResultForApproval(result) {\n      const url = `${this.baseUrl + routes.submitStudentResult}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    approveClassResult(result) {\n      const url = `${this.baseUrl + routes.approveStudentsResult}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAllGradeSetupForSchool() {\n      const url = `${this.baseUrl + routes.getAllGradeSetup}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function AssessmentService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AssessmentService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AssessmentService,\n      factory: AssessmentService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AssessmentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}