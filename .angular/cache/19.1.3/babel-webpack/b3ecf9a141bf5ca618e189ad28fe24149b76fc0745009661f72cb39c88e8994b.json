{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst routes = {\n  addproperty: 'schtrack-auth/api/v1/SchoolProperty/SetSchoolProperty',\n  getproperty: 'schtrack-auth/api/v1/SchoolProperty/GetSchoolProperty'\n};\nexport let PropertyService = /*#__PURE__*/(() => {\n  class PropertyService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    addProperty(result) {\n      const url = `${this.baseUrl + routes.addproperty}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getProperty() {\n      const url = `${this.baseUrl + routes.getproperty}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function PropertyService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PropertyService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PropertyService,\n      factory: PropertyService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return PropertyService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}