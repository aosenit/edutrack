{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst routes = {\n  addAssignment: 'schtrack-learning/api/v1/Assignment/UploadAssignment',\n  getAssignmentByTeacher: 'schtrack-learning/api/v1/Assignment/GetAssignmentsByTeacher',\n  getAssignmentByClass: 'schtrack-learning/api/v1/Assignment/GetAssignmentsByClass',\n  getAssignmentDetails: 'schtrack-learning/api/v1/Assignment/GetAssignmentDetail',\n  getAssignmentByClassSubject: 'schtrack-learning/api/v1/Assignment/GetAssignmentsByClassSubject',\n  submitStudentAssignment: 'schtrack-learning/api/v1/AssignmentAnswer/UploadAssignmentAnswer',\n  updatecomment: 'schtrack-learning/api/v1/AssignmentAnswer/UpdateComment',\n  updatescore: 'schtrack-learning/api/v1/AssignmentAnswer/UpdateScore',\n  getAssignmentFiles: 'schtrack-learning/api/v1/Assignment/GetAssignmentsByClassSubject',\n  getstudentsubmissions: 'schtrack-learning/api/v1/AssignmentAnswer/GetAssignmentSubmissionForStudent'\n};\nexport let AssignmentService = /*#__PURE__*/(() => {\n  class AssignmentService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    addAssignment(result) {\n      const body = new FormData();\n      body.append('Title', result.Title);\n      body.append('ClassSubjectId', result.ClassSubjectId);\n      body.append('DueDate', result.DueDate);\n      body.append('TotalScore', result.TotalScore);\n      body.append('Comment', result.Comment);\n      body.append('Document', result.Document);\n      const url = `${this.baseUrl + routes.addAssignment}`;\n      return this.http.post(url, body, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAssignmentByTeacher(p, perpage) {\n      const url = `${this.baseUrl + routes.getAssignmentByTeacher}?PageIndex=${p}&PageSize=${perpage}`;\n      // (url)\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAssignmentByClass() {\n      const url = `${this.baseUrl + routes.getAssignmentByClass}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAssignmentDetails(id) {\n      const url = `${this.baseUrl + routes.getAssignmentDetails}?id=${id}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAssignmentsByClassSubject(classSubjectId) {\n      const url = `${this.baseUrl + routes.getAssignmentByClassSubject}?classSubjectId=${classSubjectId}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    submitStudentAssignment(result) {\n      // const tenantId = '1';\n      const body = new FormData();\n      body.append('AssignmentId', result.AssignmentId);\n      body.append('Document', result.Document);\n      const url = `${this.baseUrl + routes.submitStudentAssignment}`;\n      return this.http.post(url, body, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    updateComment(result) {\n      const url = `${this.baseUrl + routes.updatecomment}`;\n      return this.http.put(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    updateScore(result) {\n      const url = `${this.baseUrl + routes.updatescore}`;\n      return this.http.put(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAssignmentFiles(id) {\n      const url = `${this.baseUrl + routes.getAssignmentFiles}/?classSubjectId=${id}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getStudentAssignmentSubmission() {\n      const url = `${this.baseUrl + routes.getstudentsubmissions}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function AssignmentService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AssignmentService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AssignmentService,\n      factory: AssignmentService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return AssignmentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}