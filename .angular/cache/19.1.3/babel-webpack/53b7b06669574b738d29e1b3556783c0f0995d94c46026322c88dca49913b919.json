{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst tenantId = '1';\nconst routes = {\n  getStudentSubjectAttendance: 'schtrack-learning/api/v1/Attendance/GetStudentAttendanceForSubject',\n  getStudentClassAttendance: 'schtrack-learning/api/v1/Attendance/GetStudentAttendanceForClass',\n  getStudentAttendanceSummary: 'schtrack-learning/api/v1/Attendance/GetStudentAttendanceSummary',\n  getClassAttendanceWithDateSummary: 'schtrack-learning/api/v1/Attendance/GetClassAttendanceWithDateSummary',\n  getClassSubjectAttendanceWithDateSummary: 'schtrack-learning/api/v1/Attendance/GetClassSubjectAttendanceWithDateSummary',\n  exportAttendance: 'schtrack-learning/api/v1/Attendance/AttendanceExport',\n  exportAttendancePdf: 'schtrack-learning/api/v1/Attendance/ClassAttendancePDFExport',\n  exportSubjectAttendance: 'schtrack-learning/api/v1/Attendance/SubjectAttendanceExport',\n  exportSubjectAttendancePdf: 'schtrack-learning/api/v1/Attendance/SubjectPDFAttendanceExport',\n  exportParentExcel: 'schtrack-auth/api/v1/Parent/GetParentDataInExcel',\n  exportParentPdf: 'schtrack-auth/api/v1/Parent/GetParentDataInPDF',\n  exportSingleStudentAttendanceForClassPdf: 'schtrack-learning/api/v1/Attendance/ExportSingleStudentAttendanceForClassPDF',\n  exportSingleStudentAttendanceForSubjectPdf: 'schtrack-learning/api/v1/Attendance/ExportSingleStudentAttendanceForSubjectPDF',\n  exportSingleStudentAttendanceForClassExcel: 'schtrack-learning/api/v1/Attendance/ExportSingleStudentAttendanceForClassExcel',\n  exportSingleStudentAttendanceForSubjectExcel: 'schtrack-learning/api/v1/Attendance/ExportSingleStudentAttendanceForSubjectExcel',\n  // exportParentExcel: 'schtrack-auth/api/v1/Parent/GetParentDataInExcel',\n  exportInvoiceReportExcel: 'schtrack-auth/api/v1/School/InvoiceExcelReport',\n  exportInvoiceReportPdf: 'schtrack-auth/api/v1/School/InvoicePdfReport',\n  getSchoolInvoiceReportView: 'schtrack-auth/api/v1/School/GetSchoolInvoiceReportView'\n};\nexport let ReportingService = /*#__PURE__*/(() => {\n  class ReportingService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    getStudentAttendanceSummary(studentId, classId) {\n      const url = `${this.baseUrl + routes.getStudentAttendanceSummary}?studentId=${studentId}&classId=${classId}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getStudentAttendanceForClass(StudentId, StudentUserId, ClassId, FromDate, ToDate) {\n      const url = `${this.baseUrl + routes.getStudentClassAttendance}?StudentId=${StudentId}&StudentUserId=${StudentUserId}&ClassId=${ClassId}&FromDate=${FromDate}&ToDate=${ToDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getStudentAttendanceForSubject(studentId, studentUserId, subjectId, date) {\n      const url = `${this.baseUrl + routes.getStudentSubjectAttendance}?studentId=${studentId}&studentUserId=${studentUserId}&subjectId=${subjectId}&date=${date}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          tenantId\n        }\n      });\n    }\n    GetClassAttendanceWithDateSummary(TenantId, classId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.getClassAttendanceWithDateSummary}?tenantId=${TenantId}&classId=${classId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getClassSubjectAttendanceWithDateSummary(TenantId, subjectId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.getClassSubjectAttendanceWithDateSummary}?tenantId=${TenantId}&subjectId=${subjectId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportAttance(TenantId, classId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.exportAttendance}?tenantId=${TenantId}&classId=${classId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSubjectAttendance(TenantId, subjectId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.exportSubjectAttendance}?tenantId=${TenantId}&subjectId=${subjectId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportAttendancePdf(TenantId, classId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.exportAttendancePdf}?tenantId=${TenantId}&classId=${classId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSubjectAttendancePdf(TenantId, subjectId, startDate, endDate) {\n      const url = `${this.baseUrl + routes.exportSubjectAttendancePdf}?tenantId=${TenantId}&subjectId=${subjectId}&AttendanceStartDate=${startDate}&AttendanceEndDate=${endDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportParentExcelSheet(schoolId) {\n      const url = `${this.baseUrl + routes.exportParentExcel}?schoolId=${schoolId}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportParentPdf(schoolId) {\n      const url = `${this.baseUrl + routes.exportParentPdf}?schoolId=${schoolId}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    // invoice endpoints\n    getSchoolInvoiceReportView(invoiceStatus) {\n      const url = `${this.baseUrl + routes.getSchoolInvoiceReportView}/${invoiceStatus}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportInvoiceReportExcel(invoiceStatus) {\n      const url = `${this.baseUrl + routes.exportInvoiceReportExcel}?invoiceStatus=${invoiceStatus}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportInvoiceReportPdf(invoiceStatus) {\n      const url = `${this.baseUrl + routes.exportInvoiceReportPdf}?invoiceStatus=${invoiceStatus}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSingleStudentAttendanceByClassExcel(StudentId, StudentUserId, ClassId, FromDate, ToDate) {\n      const url = `${this.baseUrl + routes.exportSingleStudentAttendanceForClassExcel}?StudentId=${StudentId}&StudentUserId=${StudentUserId}&ClassId=${ClassId}&FromDate=${FromDate}&ToDate=${ToDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSingleStudentAttendanceByClassPdf(StudentId, StudentUserId, ClassId, FromDate, ToDate) {\n      const url = `${this.baseUrl + routes.exportSingleStudentAttendanceForClassPdf}?StudentId=${StudentId}&StudentUserId=${StudentUserId}&ClassId=${ClassId}&FromDate=${FromDate}&ToDate=${ToDate}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSingleStudentAttendanceBySubjectExcel(studentId, studentUserId, subjectId, date) {\n      const url = `${this.baseUrl + routes.exportSingleStudentAttendanceForSubjectExcel}?studentId=${studentId}&studentUserId=${studentUserId}&subjectId=${subjectId}&date=${date}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    exportSingleStudentAttendanceBySubjectPdf(studentId, studentUserId, subjectId, date) {\n      const url = `${this.baseUrl + routes.exportSingleStudentAttendanceForSubjectPdf}?studentId=${studentId}&studentUserId=${studentUserId}&subjectId=${subjectId}&date=${date}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function ReportingService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ReportingService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ReportingService,\n      factory: ReportingService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return ReportingService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}