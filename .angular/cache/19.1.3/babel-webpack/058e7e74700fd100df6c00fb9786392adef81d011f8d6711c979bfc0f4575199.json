{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/services/data/school/school.service\";\nimport * as i3 from \"src/services/data/subscriptions/subscriptions.service\";\nimport * as i4 from \"src/services/classes/notifications/notifications.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"ng-multiselect-dropdown\";\nexport let SubscriptionPageComponent = /*#__PURE__*/(() => {\n  class SubscriptionPageComponent {\n    constructor(fb, schoolServices, subscriptionService, notifyService, router) {\n      this.fb = fb;\n      this.schoolServices = schoolServices;\n      this.subscriptionService = subscriptionService;\n      this.notifyService = notifyService;\n      this.router = router;\n      this.dropdownSettings = {};\n      this.dropdownList = [];\n    }\n    ngOnInit() {\n      this.initiatSubscriptionForm();\n      this.getAllSchools();\n      this.dropdownSettings = {\n        singleSelection: true,\n        idField: 'id',\n        textField: 'name',\n        selectAllText: 'Select All',\n        unSelectAllText: 'UnSelect All',\n        itemsShowLimit: 1,\n        allowSearchFilter: true\n      };\n    }\n    initiatSubscriptionForm() {\n      this.subscriptionForm = this.fb.group({\n        startDate: ['', Validators.required],\n        endDate: ['', Validators.required],\n        price: ['', Validators.required],\n        studentCount: ['', Validators.required],\n        schoolID: ['', Validators.required]\n      });\n    }\n    getAllSchools() {\n      this.schoolServices.getAllSchools(1, '').subscribe(data => {\n        if (data.hasErrors === false) {\n          this.clientList = data.payload;\n          const arr = [];\n          this.clientList.forEach(item => {\n            arr.push({\n              id: item.id,\n              name: item.name\n            });\n          });\n          this.dropdownList = arr;\n        }\n      }, error => {\n        this.notifyService.publishMessages(error.errors, 'danger', 1);\n      });\n    }\n    createSubscription() {\n      const {\n        startDate,\n        endDate,\n        price,\n        studentCount,\n        schoolID\n      } = this.subscriptionForm.value;\n      const schoolId = schoolID.map(name => {\n        return name.id;\n      });\n      const result = {\n        startDate,\n        endDate,\n        pricePerStudent: parseInt(price),\n        expectedNumberOfStudent: parseInt(studentCount),\n        schoolId: parseInt(schoolId[0])\n      };\n      const payload = [];\n      payload.push(result);\n      console.log(result);\n      this.subscriptionService.createNewSubscription(payload).subscribe(res => {\n        if (res.hasErrors === false) {\n          this.notifyService.publishMessages(res.description, 'success', 1);\n          this.router.navigateByUrl('/admin/subscription');\n        } else {\n          this.notifyService.publishMessages(res.errors, 'danger', 1);\n        }\n      });\n    }\n    allowNumbersOnly(e) {\n      const ev = e || window.event;\n      const charcode = ev.which ? ev.which : ev.keycode;\n      if (charcode > 31 && (charcode < 48 || charcode > 57) && charcode !== 46) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    }\n    goBack() {\n      window.history.back();\n    }\n    static #_ = (() => this.ɵfac = function SubscriptionPageComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SubscriptionPageComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SchoolService), i0.ɵɵdirectiveInject(i3.SubscriptionsService), i0.ɵɵdirectiveInject(i4.NotificationsService), i0.ɵɵdirectiveInject(i5.Router));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SubscriptionPageComponent,\n      selectors: [[\"app-subscription-page\"]],\n      decls: 47,\n      vars: 5,\n      consts: [[1, \"banner\", \"mb-4\", \"pb-3\"], [1, \"pt-5\", \"pl-3\", \"content\"], [1, \"banner__text-primary\", \"fw-6\"], [1, \"\"], [1, \"h-75\", \"bg-white\"], [1, \"pt-5\", 3, \"ngSubmit\", \"formGroup\"], [1, \"row\", \"mb-4\"], [1, \"col-md-6\"], [\"for\", \"startDate\", 1, \"fw-6\"], [1, \"text-danger\"], [\"type\", \"date\", \"name\", \"\", \"id\", \"startDate\", \"formControlName\", \"startDate\", 1, \"form-control\"], [\"for\", \"endDate\", 1, \"fw-6\"], [\"type\", \"date\", \"name\", \"\", \"id\", \"endDate\", \"formControlName\", \"endDate\", 1, \"form-control\"], [\"for\", \"amount\", 1, \"fw-6\"], [\"type\", \"text\", \"placeholder\", \"Enter amount\", \"id\", \"amount\", \"formControlName\", \"price\", 1, \"form-control\", 3, \"keypress\"], [\"for\", \"number\", 1, \"fw-6\"], [\"type\", \"text\", \"placeholder\", \"Enter Number\", \"id\", \"number\", \"formControlName\", \"studentCount\", 1, \"form-control\", 3, \"keypress\"], [\"formControlName\", \"schoolID\", \"required\", \"\", 3, \"placeholder\", \"data\", \"settings\"], [1, \"d-flex\", \"justify-content-center\", \"mt-5\"], [1, \"btn\", \"btn-outline-orange\", \"mx-2\", \"mx-lg-3\", \"px-5\", \"mb-4\", \"mt-3\", 3, \"click\"], [1, \"btn\", \"btn-orange-two\", \"mx-2\", \"mx-lg-3\", \"px-5\", \"mb-4\", \"mt-3\", 3, \"disabled\"]],\n      template: function SubscriptionPageComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h6\", 2);\n          i0.ɵɵtext(3, \" Subscriptions \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \" Setup all subscription standards for SchoolTrack \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"div\", 4)(7, \"form\", 5);\n          i0.ɵɵlistener(\"ngSubmit\", function SubscriptionPageComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.createSubscription();\n          });\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Start Date \");\n          i0.ɵɵelementStart(12, \"span\", 9);\n          i0.ɵɵtext(13, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(14, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 11);\n          i0.ɵɵtext(17, \"End Date \");\n          i0.ɵɵelementStart(18, \"span\", 9);\n          i0.ɵɵtext(19, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(20, \"input\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 6)(22, \"div\", 7)(23, \"label\", 13);\n          i0.ɵɵtext(24, \"Price Per User (N) \");\n          i0.ɵɵelementStart(25, \"span\", 9);\n          i0.ɵɵtext(26, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"input\", 14);\n          i0.ɵɵlistener(\"keypress\", function SubscriptionPageComponent_Template_input_keypress_27_listener($event) {\n            return ctx.allowNumbersOnly($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(28, \"div\", 7)(29, \"label\", 15);\n          i0.ɵɵtext(30, \"Expected Number of Students \");\n          i0.ɵɵelementStart(31, \"span\", 9);\n          i0.ɵɵtext(32, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"input\", 16);\n          i0.ɵɵlistener(\"keypress\", function SubscriptionPageComponent_Template_input_keypress_33_listener($event) {\n            return ctx.allowNumbersOnly($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(34, \"div\", 6)(35, \"div\", 7)(36, \"label\", 13);\n          i0.ɵɵtext(37, \"School \");\n          i0.ɵɵelementStart(38, \"span\", 9);\n          i0.ɵɵtext(39, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(40, \"ng-multiselect-dropdown\", 17);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(41, \"div\", 6);\n          i0.ɵɵelementStart(42, \"div\", 18)(43, \"button\", 19);\n          i0.ɵɵlistener(\"click\", function SubscriptionPageComponent_Template_button_click_43_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(44, \" Cancel \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"button\", 20);\n          i0.ɵɵtext(46, \" Save \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.subscriptionForm);\n          i0.ɵɵadvance(33);\n          i0.ɵɵproperty(\"placeholder\", \" \")(\"data\", ctx.dropdownList)(\"settings\", ctx.dropdownSettings);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", ctx.subscriptionForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i6.MultiSelectComponent],\n      styles: [\".client[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:100vh}.client[_ngcontent-%COMP%]   h6[_ngcontent-%COMP%]{color:#0a1128;font-size:32px;font-weight:600}.banner[_ngcontent-%COMP%]{width:100%;background-image:url(billing-bg.png);background-repeat:no-repeat;background-color:#1d4e4d;background-size:cover;background-position:center;border-radius:10px;display:flex;justify-content:space-between;align-items:flex-end;padding:0 1.5rem;color:#fff;position:relative;background-blend-mode:multiply;mix-blend-mode:multiply;-webkit-backdrop-filter:opacity(.4);backdrop-filter:opacity(.4)}.banner__text-primary[_ngcontent-%COMP%]{font-size:36px}form[_ngcontent-%COMP%]{padding:0 3rem}\"]\n    }))();\n  }\n  return SubscriptionPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}