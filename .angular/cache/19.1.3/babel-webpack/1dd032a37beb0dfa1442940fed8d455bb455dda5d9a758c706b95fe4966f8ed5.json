{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/services/classes/notifications/notifications.service\";\nimport * as i4 from \"src/services/data/school/school.service\";\nimport * as i5 from \"../create-branch.component\";\nimport * as i6 from \"@angular/common\";\nfunction BranchContactPersonComponent_div_9_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BranchContactPersonComponent_div_9_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactFirstName.errors.required);\n  }\n}\nfunction BranchContactPersonComponent_div_16_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BranchContactPersonComponent_div_16_small_1_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactLastName.errors.required);\n  }\n}\nfunction BranchContactPersonComponent_div_24_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_24_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Invalid number length (must be 11 digit)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_24_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Invalid number character\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BranchContactPersonComponent_div_24_small_1_Template, 2, 0, \"small\", 18)(2, BranchContactPersonComponent_div_24_small_2_Template, 2, 0, \"small\", 18)(3, BranchContactPersonComponent_div_24_small_3_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactPhoneNo.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactPhoneNo.errors.minlength);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactPhoneNo.errors.pattern);\n  }\n}\nfunction BranchContactPersonComponent_div_31_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Field is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_31_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 5);\n    i0.ɵɵtext(1, \"Invalid email pattern\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BranchContactPersonComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BranchContactPersonComponent_div_31_small_1_Template, 2, 0, \"small\", 18)(2, BranchContactPersonComponent_div_31_small_2_Template, 2, 0, \"small\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactEmail.errors.required);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactPersonForm.controls.ContactEmail.errors.email);\n  }\n}\nexport let BranchContactPersonComponent = /*#__PURE__*/(() => {\n  class BranchContactPersonComponent {\n    constructor(fb, router, route, notifyService, schoolServies, home) {\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n      this.notifyService = notifyService;\n      this.schoolServies = schoolServies;\n      this.home = home;\n      this.formBtn = {\n        type: 'create',\n        text: 'Create Branch'\n      };\n      this.DocumentTypes = [];\n    }\n    ngOnInit() {\n      const helper = new JwtHelperService();\n      this.adminDetails = helper.decodeToken(localStorage.getItem('access_token'));\n      this.id = this.route.snapshot.params.id;\n      this.populateContactPerson();\n      this.route.params.subscribe(param => {\n        if (!param.id) {\n          this.populateContactPerson();\n        } else {\n          this.getProfileInformation();\n        }\n      });\n      this.getAActiveTab();\n    }\n    populateContactPerson() {\n      this.contactPersonForm = this.fb.group({\n        ContactFirstName: ['', Validators.required],\n        ContactLastName: ['', Validators.required],\n        ContactPhoneNo: ['', [Validators.required, Validators.minLength(11), Validators.pattern('(0[7-9][0-1][0-9]{8})|(0[1-4][0-9]{7})+$')]],\n        ContactEmail: ['', [Validators.email, Validators.required]]\n      });\n    }\n    nextStep() {\n      this.home.stepper(4);\n      sessionStorage.setItem('contact-person', JSON.stringify(this.contactPersonForm.value));\n    }\n    prevStep() {\n      this.home.stepper(2);\n      this.currentStep = document.getElementById('step-' + `${2 + 1}`);\n      this.currentStep.classList.remove('active');\n    }\n    getProfileInformation() {\n      const payload = JSON.parse(sessionStorage.getItem('client-info'));\n      this.contactPersonForm.patchValue({\n        ContactFirstName: payload.contactFirstName,\n        ContactLastName: payload.contactLastName,\n        ContactPhoneNo: payload.contactPhone,\n        ContactEmail: payload.contactEmail\n      });\n    }\n    getAActiveTab() {\n      this.contactPerson = JSON.parse(sessionStorage.getItem('contact-person'));\n      if (sessionStorage.getItem('contact-person') !== null) {\n        // // (`School person exists`);\n        this.contactPersonForm.patchValue({\n          ContactFirstName: this.contactPerson.ContactFirstName,\n          ContactLastName: this.contactPerson.ContactLastName,\n          ContactPhoneNo: this.contactPerson.ContactPhoneNo,\n          ContactEmail: this.contactPerson.ContactEmail\n        });\n      } else {}\n    }\n    allowNumbersOnly(e) {\n      const ev = e || window.event;\n      const charcode = ev.which ? ev.which : ev.keycode;\n      if (charcode > 31 && (charcode < 48 || charcode > 57) && charcode !== 46) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    }\n    createSchool() {\n      const profile = JSON.parse(sessionStorage.getItem('profile-info'));\n      const details = JSON.parse(sessionStorage.getItem('school-details'));\n      const finalstep = this.contactPersonForm.value;\n      const isActive = true;\n      const GroupId = this.adminDetails.SchGroupId;\n      // const formData = new FormData();\n      // this.DocumentTypes.forEach((item: any) => formData.append('DocumentTypes', item));\n      const result = {\n        ...profile,\n        ...details,\n        ...finalstep,\n        isActive,\n        GroupId,\n        DocumentTypes: this.DocumentTypes\n      };\n      if (this.formBtn.type === 'create') {\n        this.schoolServies.addSchool(result).subscribe(data => {\n          if (data.hasErrors === false) {\n            // console.log('school create successfully', data);\n            this.notifyService.publishMessages(data.description, 'info', 1);\n            sessionStorage.removeItem('profile-info');\n            sessionStorage.removeItem('school-details');\n            sessionStorage.removeItem('contact-person');\n            this.router.navigateByUrl('/school-manager/branches');\n          } else {\n            // console.log(data);\n            this.notifyService.publishMessages(data.errors, 'danger', 1);\n          }\n        }, error => {\n          // console.log(error);\n          this.notifyService.publishMessages(error, 'danger', 1);\n        });\n      } else {\n        this.schoolServies.updateSchool(this.id, result).subscribe(data => {\n          if (data.hasErrors === false) {\n            // console.log('school edited successfully', data);\n            this.notifyService.publishMessages(data.description, 'info', 1);\n            sessionStorage.removeItem('profile-info');\n            sessionStorage.removeItem('school-details');\n            sessionStorage.removeItem('contact-person');\n            if (this.routeUrl === '/school-manager/create-school') {\n              this.router.navigateByUrl('/school-manager/branches');\n            } else {\n              this.router.navigateByUrl('/admin/clients');\n            }\n          }\n        }, error => {\n          this.notifyService.publishMessages(error.errors, 'danger', 1);\n        });\n      }\n    }\n    static #_ = (() => this.ɵfac = function BranchContactPersonComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || BranchContactPersonComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.NotificationsService), i0.ɵɵdirectiveInject(i4.SchoolService), i0.ɵɵdirectiveInject(i5.CreateBranchComponent));\n    })();\n    static #_2 = (() => this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BranchContactPersonComponent,\n      selectors: [[\"app-branch-contact-person\"]],\n      decls: 37,\n      vars: 7,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [1, \"contact-details\"], [1, \"form-row\", \"my-5\"], [1, \"\"], [\"for\", \"fname\", 1, \"fw-6\"], [1, \"text-danger\"], [\"type\", \"text\", \"id\", \"fname\", \"placeholder\", \"Enter first Name\", \"formControlName\", \"ContactFirstName\", 1, \"form-control\", \"form-control-lg\"], [\"class\", \"error\", 4, \"ngIf\"], [\"for\", \"lname\", 1, \"fw-6\"], [\"type\", \"text  \", \"id\", \"lname\", \"placeholder\", \"Enter last name\", \"formControlName\", \"ContactLastName\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"tel\", 1, \"fw-6\"], [\"type\", \"tel\", \"id\", \"tel\", \"placeholder\", \"Enter phone number\", \"formControlName\", \"ContactPhoneNo\", \"maxlength\", \"11\", \"required\", \"\", 1, \"form-control\", \"form-control-lg\", 3, \"keypress\"], [\"for\", \"email\", 1, \"fw-6\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", \"formControlName\", \"ContactEmail\", 1, \"form-control\", \"form-control-lg\"], [1, \"d-flex\", \"justify-content-center\", \"mb-5\"], [1, \"btn\", \"btn-outline-orange\", \"mx-2\", \"mx-lg-3\", \"px-5\", \"mb-4\", \"mt-3\", 3, \"click\"], [1, \"btn\", \"btn-orange-two\", \"mx-2\", \"mx-lg-3\", \"px-5\", \"mb-4\", \"mt-3\", 3, \"disabled\"], [1, \"error\"], [\"class\", \"text-danger\", 4, \"ngIf\"]],\n      template: function BranchContactPersonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function BranchContactPersonComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.createSchool();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n          i0.ɵɵtext(5, \"First Name \");\n          i0.ɵɵelementStart(6, \"span\", 5);\n          i0.ɵɵtext(7, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(8, \"input\", 6);\n          i0.ɵɵtemplate(9, BranchContactPersonComponent_div_9_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 3)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Last Name \");\n          i0.ɵɵelementStart(13, \"span\", 5);\n          i0.ɵɵtext(14, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(15, \"input\", 9);\n          i0.ɵɵtemplate(16, BranchContactPersonComponent_div_16_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 2)(18, \"div\", 3)(19, \"label\", 10);\n          i0.ɵɵtext(20, \"Phone number \");\n          i0.ɵɵelementStart(21, \"span\", 5);\n          i0.ɵɵtext(22, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"input\", 11);\n          i0.ɵɵlistener(\"keypress\", function BranchContactPersonComponent_Template_input_keypress_23_listener($event) {\n            return ctx.allowNumbersOnly($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(24, BranchContactPersonComponent_div_24_Template, 4, 3, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 12);\n          i0.ɵɵtext(27, \"Email \");\n          i0.ɵɵelementStart(28, \"span\", 5);\n          i0.ɵɵtext(29, \"*\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(30, \"input\", 13);\n          i0.ɵɵtemplate(31, BranchContactPersonComponent_div_31_Template, 3, 2, \"div\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(32, \"div\", 14)(33, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function BranchContactPersonComponent_Template_button_click_33_listener() {\n            return ctx.prevStep();\n          });\n          i0.ɵɵtext(34, \" Back \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"button\", 16);\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.contactPersonForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ctx.contactPersonForm.controls.ContactFirstName.touched && ctx.contactPersonForm.controls.ContactFirstName.errors);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.contactPersonForm.controls.ContactLastName.touched && ctx.contactPersonForm.controls.ContactLastName.errors);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.contactPersonForm.controls.ContactPhoneNo.touched && ctx.contactPersonForm.controls.ContactPhoneNo.errors);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.contactPersonForm.controls.ContactEmail.touched && ctx.contactPersonForm.controls.ContactEmail.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.contactPersonForm.invalid);\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.formBtn.text, \" \");\n        }\n      },\n      dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MaxLengthValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".form-row[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;grid-gap:3rem}h6[_ngcontent-%COMP%]{font-weight:700;font-weight:600}form[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%], .custom-file-input[_ngcontent-%COMP%]{color:#000;font-size:16px;border:1px solid #D1D9DF}p[_ngcontent-%COMP%]{color:#000;font-size:14px}\"]\n    }))();\n  }\n  return BranchContactPersonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}