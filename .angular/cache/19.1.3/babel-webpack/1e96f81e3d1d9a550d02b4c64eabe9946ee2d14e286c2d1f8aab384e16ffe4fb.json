{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst routes = {\n  addsubject: 'schtrack-learning/api/v1/Subject/NewSubject',\n  addsubjectToClass: 'schtrack-learning/api/v1/ClassSubject/AddSubjectsToClass',\n  getallSubjects: 'schtrack-learning/api/v1/Subject/GetAllSubjects',\n  // getsinglesubject: 'schtrack-learning/api/v1/Subject/GetAllSubjects ',\n  getPaginatedSubject: 'schtrack-learning/api/v1/Subject/GetSubjects',\n  editsubject: 'schtrack-learning/api/v1/Subject/UpdateSubject'\n};\nexport let SubjectService = /*#__PURE__*/(() => {\n  class SubjectService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.serverUrl;\n      this.baseUrl2 = environment.demourl;\n    }\n    addNewSubject(result) {\n      const url = `${this.baseUrl + routes.addsubject}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    addNewSubjectToClass(result) {\n      const url = `${this.baseUrl + routes.addsubjectToClass}`;\n      return this.http.post(url, result, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAllSubjects() {\n      const url = `${this.baseUrl + routes.getallSubjects}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getAllSubjectsNoPagination() {\n      const url = `${this.baseUrl + routes.getPaginatedSubject}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    getPaginatedSubject(p, perpage) {\n      const url = `${this.baseUrl + routes.getPaginatedSubject}?PageIndex=${p}&PageSize=${perpage}`;\n      return this.http.get(url, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    updateSubjects(payload) {\n      const url = `${this.baseUrl + routes.editsubject}`;\n      return this.http.put(url, payload, {\n        headers: {\n          Authorization: 'Bearer ' + localStorage.getItem('access_token')\n        }\n      });\n    }\n    static #_ = (() => this.ɵfac = function SubjectService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || SubjectService)(i0.ɵɵinject(i1.HttpClient));\n    })();\n    static #_2 = (() => this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SubjectService,\n      factory: SubjectService.ɵfac,\n      providedIn: 'root'\n    }))();\n  }\n  return SubjectService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}